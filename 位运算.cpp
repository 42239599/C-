/************************************
& 按位与----->两个相应的二进制位都为1，则结果为1，否则为0   3&8 = 1--->00000011 & 00000101 = 00000001
| 按位或-----> 相应的二进制位中只要有一个为 1 ，该位的结果为 1 ； 
^ 按位异或---->参加运算的两个二进制位同号则结果为 0（假） ，异号则结果为 1 （真） 0^0=0,1^0=1,1^1=0 
~ 取反
<< 左移------>a =<< 将a 的二进制数左移2位，右边补0     若 a =15，二进制为 00001111，左移两位得00111100，（60）；高位左移后溢出就直接舍弃----> 左移1位相当于 *2 
>> 右移----->a=17时（ 00001111 ），舍弃低2位11，得到00000011 ；右移一位相当于除以2^1 

****************************************/

////大小写字母间转换
//#include <stdio.h>
//
//int main()
//{
//	char ch;
//	
//	printf("请输入一个字母：\n");
//	ch = getchar();
//	
//	while( !(ch>'A' && ch<'z') || (ch > 'Z' && ch < 'a'))
//	{
//		printf("输入有误，请重新输入一个字母：\n");
//		ch = getchar();
//	}
//	if(ch & 32)
//	{
//		ch = ch & 223;//使第五位为0，变大写 
//	}
//	else
//	{
//		ch = ch | 255;//使第五位为 1 ，变小写 
//	}
//	
//	putchar(ch);
//	
//	ch = getchar();
//	putchar(ch);
//	return 0;
// } 























